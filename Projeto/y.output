Terminals unused in grammar

   STRLIT
   BOOLLIT
   PRINT
   PARSEINT
   DOTLENGHT
   RETURN
   WHILE
   IF
   ELSE
   EQ
   ASSIGN
   DIV
   RSHIFT
   LSHIFT
   XOR
   GE
   GT
   LE
   LT
   MINUS
   MOD
   NE
   NOT
   OR
   PLUS
   STAR
   ARROW
   AND
   RESERVED
   INTLIT
   REALLIT


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE Declarations RBRACE

    2 Declarations: MethodDecl Declarations
    3             | FieldDecl Declarations
    4             | SEMICOLON Declarations
    5             | %empty

    6 FieldDecl: PUBLIC STATIC Type ID CommaId SEMICOLON
    7          | error SEMICOLON

    8 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    9 MethodHeader: Type ID LPAR FormalParams RPAR
   10             | VOID ID LPAR FormalParams RPAR

   11 FormalParams: Type ID CommaTypeId
   12             | STRING LSQ RSQ ID
   13             | %empty

   14 MethodBody: LBRACE MethodBodyContent RBRACE

   15 MethodBodyContent: VarDecl MethodBodyContent
   16                  | %empty

   17 VarDecl: Type ID CommaId SEMICOLON

   18 CommaId: COMMA ID CommaId
   19        | %empty

   20 CommaTypeId: COMMA Type ID CommaTypeId
   21            | %empty

   22 Type: BOOL
   23     | INT
   24     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256) 7
ID (258) 1 6 9 10 11 12 17 18 20
STRLIT (259)
BOOLLIT (260)
PRINT (261)
PARSEINT (262)
DOTLENGHT (263)
PUBLIC (264) 6 8
RETURN (265)
STATIC (266) 6 8
STRING (267) 12
VOID (268) 10
WHILE (269)
INT (270) 23
DOUBLE (271) 24
IF (272)
ELSE (273)
BOOL (274) 22
CLASS (275) 1
EQ (276)
ASSIGN (277)
COMMA (278) 18 20
DIV (279)
RSHIFT (280)
LSHIFT (281)
XOR (282)
GE (283)
GT (284)
LE (285)
LT (286)
MINUS (287)
MOD (288)
NE (289)
NOT (290)
OR (291)
PLUS (292)
SEMICOLON (293) 4 6 7 17
STAR (294)
ARROW (295)
AND (296)
LBRACE (297) 1 14
RBRACE (298) 1 14
LPAR (299) 9 10
RPAR (300) 9 10
LSQ (301) 12
RSQ (302) 12
RESERVED (303)
INTLIT (304)
REALLIT (305)


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
Declarations (53)
    on left: 2 3 4 5, on right: 1 2 3 4
FieldDecl (54)
    on left: 6 7, on right: 3
MethodDecl (55)
    on left: 8, on right: 2
MethodHeader (56)
    on left: 9 10, on right: 8
FormalParams (57)
    on left: 11 12 13, on right: 9 10
MethodBody (58)
    on left: 14, on right: 8
MethodBodyContent (59)
    on left: 15 16, on right: 14 15
VarDecl (60)
    on left: 17, on right: 15
CommaId (61)
    on left: 18 19, on right: 6 17 18
CommaTypeId (62)
    on left: 20 21, on right: 11 20
Type (63)
    on left: 22 23 24, on right: 6 9 11 17 20


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE Declarations RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE Declarations RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . Declarations RBRACE

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 5 (Declarations)

    Declarations  go to state 9
    FieldDecl     go to state 10
    MethodDecl    go to state 11


State 6

    7 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    6 FieldDecl: PUBLIC . STATIC Type ID CommaId SEMICOLON
    8 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody

    STATIC  shift, and go to state 13


State 8

    4 Declarations: SEMICOLON . Declarations

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 5 (Declarations)

    Declarations  go to state 14
    FieldDecl     go to state 10
    MethodDecl    go to state 11


State 9

    1 Program: CLASS ID LBRACE Declarations . RBRACE

    RBRACE  shift, and go to state 15


State 10

    3 Declarations: FieldDecl . Declarations

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 5 (Declarations)

    Declarations  go to state 16
    FieldDecl     go to state 10
    MethodDecl    go to state 11


State 11

    2 Declarations: MethodDecl . Declarations

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 5 (Declarations)

    Declarations  go to state 17
    FieldDecl     go to state 10
    MethodDecl    go to state 11


State 12

    7 FieldDecl: error SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 13

    6 FieldDecl: PUBLIC STATIC . Type ID CommaId SEMICOLON
    8 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody

    VOID    shift, and go to state 18
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    MethodHeader  go to state 22
    Type          go to state 23


State 14

    4 Declarations: SEMICOLON Declarations .

    $default  reduce using rule 4 (Declarations)


State 15

    1 Program: CLASS ID LBRACE Declarations RBRACE .

    $default  reduce using rule 1 (Program)


State 16

    3 Declarations: FieldDecl Declarations .

    $default  reduce using rule 3 (Declarations)


State 17

    2 Declarations: MethodDecl Declarations .

    $default  reduce using rule 2 (Declarations)


State 18

   10 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 24


State 19

   23 Type: INT .

    $default  reduce using rule 23 (Type)


State 20

   24 Type: DOUBLE .

    $default  reduce using rule 24 (Type)


State 21

   22 Type: BOOL .

    $default  reduce using rule 22 (Type)


State 22

    8 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 25

    MethodBody  go to state 26


State 23

    6 FieldDecl: PUBLIC STATIC Type . ID CommaId SEMICOLON
    9 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 27


State 24

   10 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 28


State 25

   14 MethodBody: LBRACE . MethodBodyContent RBRACE

    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 16 (MethodBodyContent)

    MethodBodyContent  go to state 29
    VarDecl            go to state 30
    Type               go to state 31


State 26

    8 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 8 (MethodDecl)


State 27

    6 FieldDecl: PUBLIC STATIC Type ID . CommaId SEMICOLON
    9 MethodHeader: Type ID . LPAR FormalParams RPAR

    COMMA  shift, and go to state 32
    LPAR   shift, and go to state 33

    $default  reduce using rule 19 (CommaId)

    CommaId  go to state 34


State 28

   10 MethodHeader: VOID ID LPAR . FormalParams RPAR

    STRING  shift, and go to state 35
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 13 (FormalParams)

    FormalParams  go to state 36
    Type          go to state 37


State 29

   14 MethodBody: LBRACE MethodBodyContent . RBRACE

    RBRACE  shift, and go to state 38


State 30

   15 MethodBodyContent: VarDecl . MethodBodyContent

    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 16 (MethodBodyContent)

    MethodBodyContent  go to state 39
    VarDecl            go to state 30
    Type               go to state 31


State 31

   17 VarDecl: Type . ID CommaId SEMICOLON

    ID  shift, and go to state 40


State 32

   18 CommaId: COMMA . ID CommaId

    ID  shift, and go to state 41


State 33

    9 MethodHeader: Type ID LPAR . FormalParams RPAR

    STRING  shift, and go to state 35
    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    $default  reduce using rule 13 (FormalParams)

    FormalParams  go to state 42
    Type          go to state 37


State 34

    6 FieldDecl: PUBLIC STATIC Type ID CommaId . SEMICOLON

    SEMICOLON  shift, and go to state 43


State 35

   12 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 44


State 36

   10 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 45


State 37

   11 FormalParams: Type . ID CommaTypeId

    ID  shift, and go to state 46


State 38

   14 MethodBody: LBRACE MethodBodyContent RBRACE .

    $default  reduce using rule 14 (MethodBody)


State 39

   15 MethodBodyContent: VarDecl MethodBodyContent .

    $default  reduce using rule 15 (MethodBodyContent)


State 40

   17 VarDecl: Type ID . CommaId SEMICOLON

    COMMA  shift, and go to state 32

    $default  reduce using rule 19 (CommaId)

    CommaId  go to state 47


State 41

   18 CommaId: COMMA ID . CommaId

    COMMA  shift, and go to state 32

    $default  reduce using rule 19 (CommaId)

    CommaId  go to state 48


State 42

    9 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 49


State 43

    6 FieldDecl: PUBLIC STATIC Type ID CommaId SEMICOLON .

    $default  reduce using rule 6 (FieldDecl)


State 44

   12 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 50


State 45

   10 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 10 (MethodHeader)


State 46

   11 FormalParams: Type ID . CommaTypeId

    COMMA  shift, and go to state 51

    $default  reduce using rule 21 (CommaTypeId)

    CommaTypeId  go to state 52


State 47

   17 VarDecl: Type ID CommaId . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 48

   18 CommaId: COMMA ID CommaId .

    $default  reduce using rule 18 (CommaId)


State 49

    9 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 9 (MethodHeader)


State 50

   12 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 54


State 51

   20 CommaTypeId: COMMA . Type ID CommaTypeId

    INT     shift, and go to state 19
    DOUBLE  shift, and go to state 20
    BOOL    shift, and go to state 21

    Type  go to state 55


State 52

   11 FormalParams: Type ID CommaTypeId .

    $default  reduce using rule 11 (FormalParams)


State 53

   17 VarDecl: Type ID CommaId SEMICOLON .

    $default  reduce using rule 17 (VarDecl)


State 54

   12 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 12 (FormalParams)


State 55

   20 CommaTypeId: COMMA Type . ID CommaTypeId

    ID  shift, and go to state 56


State 56

   20 CommaTypeId: COMMA Type ID . CommaTypeId

    COMMA  shift, and go to state 51

    $default  reduce using rule 21 (CommaTypeId)

    CommaTypeId  go to state 57


State 57

   20 CommaTypeId: COMMA Type ID CommaTypeId .

    $default  reduce using rule 20 (CommaTypeId)
